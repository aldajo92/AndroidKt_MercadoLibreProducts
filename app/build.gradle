plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
}

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.projects.aldajo92.mercadolibreproducts"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }

    // taken from: https://stackoverflow.com/questions/44342455/more-than-one-file-was-found-with-os-independent-path-meta-inf-license
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }
}

ext {
    // Dependencies Version
    androidx_appcompat = '1.2.0'
    androidx_coreKtx = '1.3.2'
    androidx_constraintLayout = '2.0.4'
    androidx_lifecycleExtensions = '2.2.0'
    androidx_liveData = '2.3.1'
    androidx_fragmentktx = "1.3.2"
    androidx_preference = "1.1.1"
    android_navigation = '1.0.0'
    android_material = '1.2.1'
    recyclerView = '1.1.0'

    material = '1.3.0'
    timber = '4.7.1'

    moshi = "1.9.3"
    retrofit = "2.9.0"
    picasso = '2.71828'

    dagger_version = '2.33'

    // Testing Dependencies Version
    junit = '4.13.2'
    mockito_kotlin = '3.0.0'
    androidJunit = '1.1.2'
    expressonCore = '3.3.0'
    legacy_support_v4 = '1.0.0'
}

dependencies {
    implementation project(':core')

    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "androidx.appcompat:appcompat:$androidx_appcompat"
    implementation "androidx.core:core-ktx:$androidx_coreKtx"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraintLayout"
    implementation "androidx.lifecycle:lifecycle-extensions:$androidx_lifecycleExtensions"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidx_liveData"
    implementation "androidx.fragment:fragment-ktx:$androidx_fragmentktx"
    implementation "androidx.preference:preference-ktx:$androidx_preference"
    implementation "androidx.recyclerview:recyclerview:$recyclerView"

    implementation "android.arch.navigation:navigation-fragment-ktx:$android_navigation"
    implementation "android.arch.navigation:navigation-ui-ktx:$android_navigation"
    implementation "com.google.android.material:material:$android_material"

    implementation "com.google.android.material:material:$material"
    implementation "com.jakewharton.timber:timber:$timber"
    implementation "androidx.legacy:legacy-support-v4:$legacy_support_v4"

    // Moshi
    implementation "com.squareup.moshi:moshi:$moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"

    implementation "com.squareup.picasso:picasso:$picasso"

    // Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    testImplementation "junit:junit:$junit"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin"
    androidTestImplementation "androidx.test.ext:junit:$androidJunit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$expressonCore"
}